{"ast":null,"code":"import React from'react';import{useContext,useEffect,useState}from\"react\";import{AuthContext}from\"../../context/AuthContext\";import Topbar from\"../../components/topbar/Topbar\";import Sidebar from\"../../components/sidebar/Sidebar\";import Feed from\"../../components/feed/Feed\";import Rightbar from\"../../components/rightbar/Rightbar\";import axios from\"axios\";import{useParams}from'react-router';import{Add,Remove}from\"@material-ui/icons\";import{withStyles}from'@material-ui/core/styles';import{styles}from'./profileStyle';import{useMediaQuery}from'react-responsive';import TextField from'@material-ui/core/TextField';import{colors}from'@material-ui/core';import{toast}from'react-toastify';import{ToastContainer}from'react-toastify';import{regSw,subscribe}from'../../helper.js';import TimeMe from\"timeme.js\";import{Failed_Update_profile,Profile_Saved,Save_profile,Select_from_Gallery}from'../../constants';//import { ToastProvider, useToasts } from 'react-toast-notifications';\n//import showToast from \"../../components/toastify/toastify\";\n//import User from '../../../../server/models/User';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Profile(_ref){let{classes}=_ref;const[selectedImage,setSelectedImage]=useState(null);const[preImage,setPreImage]=useState(null);const{user:currentUser,dispatch}=useContext(AuthContext);const[bio,setBio]=useState(\"\");const[usr,setUsr]=useState({});const[city,setCity]=useState(\"\");const[country,setCountry]=useState(\"\");const[relationship,setRelationship]=useState(\"\");const username=useParams().username;const PF=process.env.REACT_APP_PUBLIC_FOLDER;const isMobileDevice=useMediaQuery({query:\"(min-device-width: 480px)\"});const isTabletDevice=useMediaQuery({query:\"(min-device-width: 768px)\"});const[followed,setFollowed]=useState([]);const[isProfileFetched,setIsProfileFetched]=useState(true);const[prevUN,setPrevUN]=useState(\"\");const[shouldSendEvent,setShouldSendEvent]=useState(false);/*const YourComponent = () => {\n  const { addToast } = useToasts();\n\n  const showToast = () => {\n    addToast('Your message here', { appearance: 'success' });\n  };\n\n  return (<></>);\n  <ToastProvider>\n          <YourComponent/>\n        </ToastProvider>\n};*/useEffect(()=>{const pushResponse=async()=>{/*try {\n      const serviceWorkerReg = await regSw ();\n    //subscribe(serviceWorkerReg);\n      console.log(serviceWorkerReg);\n        const options = {}\n        let subscription = await serviceWorkerReg.pushManager.subscribe ({\n          userVisibleOnly: true,\n          applicationServerKey: process.env.APP_SERVER_KEY,\n        });\n        console.log(subscription);\n        //const res = axios.post(`/posts/subscribe`, subscription);\n        console.log (\" pushing notification\");\n        //console.log(res)\n\n      } catch (err){\n        console.log('Error', err);\n\n      }*/};const fetchUser=async()=>{const token=localStorage.getItem('token');const res=await axios.get(\"/users?username=\".concat(username),{headers:{'auth-token':token}});console.log(\"fetch user\");console.log(res.data);setUsr(res.data);console.log(usr);setPrevUN(username);};//if(isProfileFetched){\npushResponse();fetchUser();setIsProfileFetched(false);//}\n},[username]);/* useEffect(() => {\n  TimeMe.initialize({\n    currentPageName: \"ProfilePage\", // current page\n    idleTimeoutInSeconds: 15 // seconds\n    });\n\n    TimeMe.callWhenUserLeaves(() => {\n    setShouldSendEvent(true);\n    });\n  \n    TimeMe.callWhenUserReturns(() => {\n    setShouldSendEvent(false);\n    });\n\n  }, []); */useEffect(()=>{setFollowed(currentUser.followings.includes(usr._id));//setSelectedImage(usr.profilePicture);\nsetPreImage(usr.profilePicture);},[currentUser.followings,usr]);const handleImageInputChange=e=>{const file=e.target.files[0];usr.profilePicture=file;setSelectedImage(file);setPreImage(URL.createObjectURL(file));};const handleDescription=e=>{setBio(e.target.value);};const handleCity=e=>{setCity(e.target.value);};const handleCountry=e=>{setCountry(e.target.value);console.log(\"country value\");console.log(country);};const handleRelationship=e=>{setRelationship(e.target.value);};const handleUploadFromGallery=()=>{//console.log(\"handleUploadFromGallery\");\ndocument.getElementById('fileSeleID').innerHTML=\"Select from Gallery\";const input=document.createElement('input');input.type='file';input.accept='image/*';// Allow only image files\ninput.onchange=e=>{document.getElementById('fileSeleID').innerHTML=\"File is selected!\";const file=e.target.files[0];// Validate file type if needed\n//console.log('Selected image:', file);\n//console.log(\"selected file\");\n//console.log(file);\nsetSelectedImage(file);//usr.profilePicture = file;\n////<input accept=\"image/*\" type=\"file\" onChange={handleImageInputChange} style={{ display: 'none' }} />\nsetPreImage(URL.createObjectURL(file));};input.click();};/*const handleClick = async () => {\n    try {\n      if (followed) {\n        await axios.put(`/users/${usr._id}/unfollow`, {\n          userId: currentUser._id,\n        });\n        dispatch({ type: \"UNFOLLOW\", payload: usr._id });\n      } else {\n        await axios.put(`/users/${usr._id}/follow`, {\n          userId: currentUser._id,\n        });\n        dispatch({ type: \"FOLLOW\", payload: usr._id });\n      }\n      setFollowed(!followed);\n    } catch (err) {\n    }\n  };*/const handleUpload=async()=>{console.log(\"handleUpload\");// Handle the selected image and perform upload logic\n// Implement your upload logic here (e.g., send the image to the server)\n//console.log('Selected image:', selectedImage);\n//YourComponent.addToast('Your message here', { appearance: 'success' });\n//YourComponent.showToast('Saved Successfully');\nconst profData={userId:usr._id,desc:bio,city:city,from:country,relationship:relationship};const formData=new FormData();formData.append('id',usr._id);formData.append('desc',bio);formData.append('city',city);formData.append('relationship',relationship);formData.append('from',country);const token=localStorage.getItem('token');try{if(selectedImage!=null){console.log(\"selectedImage\");console.log(selectedImage);formData.append('profilePicture',selectedImage);const res=await axios.put(\"/users/\".concat(usr._id,\"/updateProfile\"),formData,{headers:{'Content-Type':'multipart/form-data','auth-token':token}});toast.success(\"Profile Saved\");//YourComponent.showToast('Saved Successfully');\n}else{console.log(formData);const token=localStorage.getItem('token');const res=await axios.post(\"/users/\".concat(usr._id,\"/updateProfile2\"),profData,{headers:{'auth-token':token}});//toast.success(\"Updated\");\n//const { addToast } = useToasts();\n//YourComponent.showToast('Saved Successfully');\ntoast.success({Profile_Saved});}}catch(error){console.error('Error uploading image:',error);toast.error({Failed_Update_profile});//YourComponent.showToast('Failed to upload the profile');\n// Handle error\n}// const fetchUser = async () => {\n//   const res = await axios.get(`/users?username=${username}`)\n//   setUsr(res.data);\n//};\n//fetchUser()\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Topbar,{isProfile:\"true\",showRefreshIcon:true}),/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.profile,children:/*#__PURE__*/_jsxs(\"div\",{className:classes.profileRight,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.profileRightTop,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.profileCover,children:[/*#__PURE__*/_jsx(\"img\",{className:classes.profileCoverImg,src:usr.coverPicture?PF+usr.coverPicture:PF+\"person/noCover.png\",alt:\"\"}),/*#__PURE__*/_jsx(\"img\",{id:\"profileImg\",className:classes.profileUserImg,src:usr.profilePicture?PF+usr.profilePicture:PF+\"person/noAvatar.png\",alt:\"\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.profileInfo,children:[usr.username!==currentUser.username/*&& (\n          {<button className={classes.rightbarFollowButton} onClick={handleClick}>\n            {followed ? \"Unfollow\" : \"Follow\"}\n            {followed ? <Remove /> : <Add />}\n          </button>}\n        )*/,/*#__PURE__*/_jsxs(\"h4\",{className:classes.profileInfoName,children:[usr.username,\" \"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.profileRightBottom,children:/*#__PURE__*/_jsx(Feed,{username:username,selectedValue:\"0\"})})]})})]});}export default withStyles(styles)(Profile);","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","Topbar","Sidebar","Feed","Rightbar","axios","useParams","Add","Remove","withStyles","styles","useMediaQuery","TextField","colors","toast","ToastContainer","regSw","subscribe","TimeMe","Failed_Update_profile","Profile_Saved","Save_profile","Select_from_Gallery","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Profile","_ref","classes","selectedImage","setSelectedImage","preImage","setPreImage","user","currentUser","dispatch","bio","setBio","usr","setUsr","city","setCity","country","setCountry","relationship","setRelationship","username","PF","process","env","REACT_APP_PUBLIC_FOLDER","isMobileDevice","query","isTabletDevice","followed","setFollowed","isProfileFetched","setIsProfileFetched","prevUN","setPrevUN","shouldSendEvent","setShouldSendEvent","pushResponse","fetchUser","token","localStorage","getItem","res","get","concat","headers","console","log","data","followings","includes","_id","profilePicture","handleImageInputChange","e","file","target","files","URL","createObjectURL","handleDescription","value","handleCity","handleCountry","handleRelationship","handleUploadFromGallery","document","getElementById","innerHTML","input","createElement","type","accept","onchange","click","handleUpload","profData","userId","desc","from","formData","FormData","append","put","success","post","error","children","isProfile","showRefreshIcon","className","profile","profileRight","profileRightTop","profileCover","profileCoverImg","src","coverPicture","alt","id","profileUserImg","profileInfo","profileInfoName","profileRightBottom","selectedValue"],"sources":["/home/group4/TWON_STA_Case_Study/client/src/pages/profile/Profile.js"],"sourcesContent":["import React from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport Feed from \"../../components/feed/Feed\";\nimport Rightbar from \"../../components/rightbar/Rightbar\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router';\nimport { Add, Remove } from \"@material-ui/icons\";\nimport { withStyles } from '@material-ui/core/styles';\nimport {styles} from './profileStyle';\nimport { useMediaQuery } from 'react-responsive';\nimport TextField from '@material-ui/core/TextField'\nimport { colors } from '@material-ui/core';\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from 'react-toastify';\nimport {regSw, subscribe} from '../../helper.js';\nimport TimeMe from \"timeme.js\";\nimport {Failed_Update_profile, Profile_Saved, Save_profile, Select_from_Gallery } from '../../constants';\n\n//import { ToastProvider, useToasts } from 'react-toast-notifications';\n\n//import showToast from \"../../components/toastify/toastify\";\n\n//import User from '../../../../server/models/User';\nfunction Profile({ classes }) {\n    \n    const [selectedImage, setSelectedImage] = useState(null);\n    const [preImage, setPreImage] = useState(null);\n    const { user: currentUser, dispatch } = useContext(AuthContext);\n    const [bio, setBio] = useState(\"\");\n    const [usr, setUsr] = useState({});\n    const [city, setCity] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n    const [relationship, setRelationship] = useState(\"\");\n    const username = useParams().username;\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n    const isMobileDevice = useMediaQuery({ query: \"(min-device-width: 480px)\", });\n    const isTabletDevice = useMediaQuery({ query: \"(min-device-width: 768px)\", });\n    const [followed, setFollowed] = useState([]);\n    const [isProfileFetched, setIsProfileFetched] = useState(true);\n    const [prevUN, setPrevUN] = useState(\"\");\n    const [shouldSendEvent, setShouldSendEvent] = useState(false);\n\n  /*const YourComponent = () => {\n  const { addToast } = useToasts();\n\n  const showToast = () => {\n    addToast('Your message here', { appearance: 'success' });\n  };\n\n  return (<></>);\n  <ToastProvider>\n          <YourComponent/>\n        </ToastProvider>\n};*/\n\nuseEffect(() => {\n  const pushResponse = async () => {\n    /*try {\n      const serviceWorkerReg = await regSw ();\n    //subscribe(serviceWorkerReg);\n      console.log(serviceWorkerReg);\n        const options = {}\n        let subscription = await serviceWorkerReg.pushManager.subscribe ({\n          userVisibleOnly: true,\n          applicationServerKey: process.env.APP_SERVER_KEY,\n        });\n        console.log(subscription);\n        //const res = axios.post(`/posts/subscribe`, subscription);\n        console.log (\" pushing notification\");\n        //console.log(res)\n\n      } catch (err){\n        console.log('Error', err);\n\n      }*/\n  };\n\n  const fetchUser = async () => {\n    const token = localStorage.getItem('token');\n    const res = await axios.get(`/users?username=${username}`, {headers: { 'auth-token': token }})\n    console.log(\"fetch user\");\n    console.log(res.data)\n    setUsr(res.data);\n    console.log(usr);\n    setPrevUN(username);\n};\n//if(isProfileFetched){\n  pushResponse();\n  fetchUser();\n  setIsProfileFetched(false);\n//}\n}, [username]);\n\n\n/* useEffect(() => {\n  TimeMe.initialize({\n    currentPageName: \"ProfilePage\", // current page\n    idleTimeoutInSeconds: 15 // seconds\n    });\n\n    TimeMe.callWhenUserLeaves(() => {\n    setShouldSendEvent(true);\n    });\n  \n    TimeMe.callWhenUserReturns(() => {\n    setShouldSendEvent(false);\n    });\n\n  }, []); */\n\n\n    useEffect(() => {\n      setFollowed(currentUser.followings.includes(usr._id));\n        //setSelectedImage(usr.profilePicture);\n        setPreImage(usr.profilePicture);\n    }, [currentUser.followings, usr]);\n\n  const handleImageInputChange = (e) => {\n    const file = e.target.files[0];\n    usr.profilePicture = file;\n    \n    setSelectedImage(file);\n    setPreImage(URL.createObjectURL(file));\n  };\n\n  const handleDescription = (e) => {\n    setBio(e.target.value);\n  };\n\n  const handleCity = (e) => {\n    setCity(e.target.value);\n  };\n\n  const handleCountry = (e) => {\n    setCountry(e.target.value);\n    console.log(\"country value\");\n    console.log(country);\n  };\n\n  const handleRelationship = (e) => {\n    setRelationship(e.target.value);\n  };\n\n  const handleUploadFromGallery = () => {\n    //console.log(\"handleUploadFromGallery\");\n    document.getElementById('fileSeleID').innerHTML = \"Select from Gallery\";\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*'; // Allow only image files\n    input.onchange = (e) => {\n      document.getElementById('fileSeleID').innerHTML = \"File is selected!\";\n      const file = e.target.files[0];\n      // Validate file type if needed\n      //console.log('Selected image:', file);\n      //console.log(\"selected file\");\n      //console.log(file);\n      setSelectedImage(file);\n      //usr.profilePicture = file;\n      ////<input accept=\"image/*\" type=\"file\" onChange={handleImageInputChange} style={{ display: 'none' }} />\n      setPreImage(URL.createObjectURL(file));\n    };\n    input.click();\n  };\n\n  /*const handleClick = async () => {\n    try {\n      if (followed) {\n        await axios.put(`/users/${usr._id}/unfollow`, {\n          userId: currentUser._id,\n        });\n        dispatch({ type: \"UNFOLLOW\", payload: usr._id });\n      } else {\n        await axios.put(`/users/${usr._id}/follow`, {\n          userId: currentUser._id,\n        });\n        dispatch({ type: \"FOLLOW\", payload: usr._id });\n      }\n      setFollowed(!followed);\n    } catch (err) {\n    }\n  };*/\n\n  const handleUpload = async () => {\n    console.log(\"handleUpload\");\n    // Handle the selected image and perform upload logic\n    \n      // Implement your upload logic here (e.g., send the image to the server)\n      //console.log('Selected image:', selectedImage);\n      //YourComponent.addToast('Your message here', { appearance: 'success' });\n      //YourComponent.showToast('Saved Successfully');\n      const profData = {\n        userId: usr._id,\n        desc: bio,\n        city: city,\n        from: country,\n        relationship: relationship,\n      };\n\n      const formData = new FormData();\n      formData.append('id', usr._id);\n      formData.append('desc', bio);\n      formData.append('city', city);\n      formData.append('relationship', relationship);\n      formData.append('from', country);\n\n      const token = localStorage.getItem('token');\n      try {\n        if (selectedImage != null) {\n          console.log(\"selectedImage\");\n          console.log(selectedImage);\n          formData.append('profilePicture', selectedImage);\n          const res = await axios.put(`/users/${usr._id}/updateProfile`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'auth-token': token\n            },\n        });\n        toast.success(\"Profile Saved\")\n        //YourComponent.showToast('Saved Successfully');\n      } \n      else \n      {\n        console.log(formData);\n        const token = localStorage.getItem('token');\n        const res = await axios.post(`/users/${usr._id}/updateProfile2`, profData, {headers: { 'auth-token': token }});\n          //toast.success(\"Updated\");\n          //const { addToast } = useToasts();\n          //YourComponent.showToast('Saved Successfully');\n          toast.success({Profile_Saved});\n          \n      }\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        toast.error({Failed_Update_profile});\n        //YourComponent.showToast('Failed to upload the profile');\n        // Handle error\n      }\n     // const fetchUser = async () => {\n     //   const res = await axios.get(`/users?username=${username}`)\n     //   setUsr(res.data);\n    //};\n    //fetchUser()\n  };\n   return (\n        <>\n        <Topbar isProfile=\"true\"  showRefreshIcon={true}/>\n        <ToastContainer></ToastContainer>\n        <div className={classes.profile}>\n          <div className={classes.profileRight}>\n            <div className={classes.profileRightTop}>\n              <div className={classes.profileCover}>\n                <img\n                  className={classes.profileCoverImg}\n                  src={usr.coverPicture ? PF+usr.coverPicture : PF+\"person/noCover.png\"}\n                  alt=\"\"\n                />\n                {/*username == currentUser.username && (\n                <div className={classes.photosInfo}>\n                  <button id=\"fileSeleID\" onClick={handleUploadFromGallery}>{Select_from_Gallery}</button>\n                  \n                  <button onClick={handleUpload}>{Save_profile}</button>\n                </div>\n                )*/}\n                <img id='profileImg'\n                  className={classes.profileUserImg}\n                  src={usr.profilePicture ? PF + usr.profilePicture : PF+\"person/noAvatar.png\"}\n                  alt=\"\"\n                />\n              </div>\n              <div className={classes.profileInfo}>\n              {usr.username !== currentUser.username /*&& (\n          {<button className={classes.rightbarFollowButton} onClick={handleClick}>\n            {followed ? \"Unfollow\" : \"Follow\"}\n            {followed ? <Remove /> : <Add />}\n          </button>}\n        )*/}\n                <h4 className={classes.profileInfoName}>{usr.username} </h4>\n                {/*<textarea style= {{borderWidth: '1px', marginBottom: '10px'}} readOnly={!(usr.username == currentUser.username)} placeholder={usr.desc? usr.desc: \"Enter your biography\"} className={classes.shareInput} onChange={handleDescription}  />\n                <input style= {{borderWidth: '1px', marginBottom: '10px'}} readOnly={!(usr.username == currentUser.username)} placeholder={usr.city? usr.city:\"Enter the name of your City\"} className={classes.shareInput} onChange={handleCity}   />\n                <input style= {{borderWidth: '1px', marginBottom: '10px'}} readOnly={!(usr.username == currentUser.username)} placeholder={usr.from? usr.from:\"Enter the name of your Country\"} className={classes.shareInput} onChange={handleCountry}  />\n                <input style= {{borderWidth: '1px', marginBottom: '10px'}} readOnly={!(usr.username == currentUser.username)} placeholder={usr.relationship? usr.relationship:\"Whats is the status of your relationship?\"} className={classes.shareInput} onChange={handleRelationship}  />*/}\n              </div>\n            </div>\n          <div className={classes.profileRightBottom} >\n              <Feed username={username} selectedValue={\"0\"}/>\n              {/* isMobileDevice && isTabletDevice && <Rightbar  user={usr} username={username}/>*/}\n            </div>\n        </div>\n        </div>\n      </>\n    );\n  }\n\nexport default withStyles(styles)(Profile);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACvD,OAASC,WAAW,KAAQ,2BAA2B,CACvD,MAAO,CAAAC,MAAM,KAAM,gCAAgC,CACnD,MAAO,CAAAC,OAAO,KAAM,kCAAkC,CACtD,MAAO,CAAAC,IAAI,KAAM,4BAA4B,CAC7C,MAAO,CAAAC,QAAQ,KAAM,oCAAoC,CACzD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,cAAc,CACxC,OAASC,GAAG,CAAEC,MAAM,KAAQ,oBAAoB,CAChD,OAASC,UAAU,KAAQ,0BAA0B,CACrD,OAAQC,MAAM,KAAO,gBAAgB,CACrC,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,SAAS,KAAM,6BAA6B,CACnD,OAASC,MAAM,KAAQ,mBAAmB,CAC1C,OAASC,KAAK,KAAQ,gBAAgB,CACtC,OAASC,cAAc,KAAQ,gBAAgB,CAC/C,OAAQC,KAAK,CAAEC,SAAS,KAAO,iBAAiB,CAChD,MAAO,CAAAC,MAAM,KAAM,WAAW,CAC9B,OAAQC,qBAAqB,CAAEC,aAAa,CAAEC,YAAY,CAAEC,mBAAmB,KAAQ,iBAAiB,CAExG;AAEA;AAEA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBACA,QAAS,CAAAC,OAAOA,CAAAC,IAAA,CAAc,IAAb,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAExB,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGlC,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACmC,QAAQ,CAAEC,WAAW,CAAC,CAAGpC,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAAEqC,IAAI,CAAEC,WAAW,CAAEC,QAAS,CAAC,CAAGzC,UAAU,CAACG,WAAW,CAAC,CAC/D,KAAM,CAACuC,GAAG,CAAEC,MAAM,CAAC,CAAGzC,QAAQ,CAAC,EAAE,CAAC,CAClC,KAAM,CAAC0C,GAAG,CAAEC,MAAM,CAAC,CAAG3C,QAAQ,CAAC,CAAC,CAAC,CAAC,CAClC,KAAM,CAAC4C,IAAI,CAAEC,OAAO,CAAC,CAAG7C,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAAC8C,OAAO,CAAEC,UAAU,CAAC,CAAG/C,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACgD,YAAY,CAAEC,eAAe,CAAC,CAAGjD,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAAAkD,QAAQ,CAAG3C,SAAS,CAAC,CAAC,CAAC2C,QAAQ,CACrC,KAAM,CAAAC,EAAE,CAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,CAC9C,KAAM,CAAAC,cAAc,CAAG3C,aAAa,CAAC,CAAE4C,KAAK,CAAE,2BAA6B,CAAC,CAAC,CAC7E,KAAM,CAAAC,cAAc,CAAG7C,aAAa,CAAC,CAAE4C,KAAK,CAAE,2BAA6B,CAAC,CAAC,CAC7E,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAG3D,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAC4D,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG7D,QAAQ,CAAC,IAAI,CAAC,CAC9D,KAAM,CAAC8D,MAAM,CAAEC,SAAS,CAAC,CAAG/D,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACgE,eAAe,CAAEC,kBAAkB,CAAC,CAAGjE,QAAQ,CAAC,KAAK,CAAC,CAE/D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAEAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmE,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAjBI,CAkBD,CAED,KAAM,CAAAC,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAjE,KAAK,CAACkE,GAAG,oBAAAC,MAAA,CAAoBvB,QAAQ,EAAI,CAACwB,OAAO,CAAE,CAAE,YAAY,CAAEN,KAAM,CAAC,CAAC,CAAC,CAC9FO,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CACzBD,OAAO,CAACC,GAAG,CAACL,GAAG,CAACM,IAAI,CAAC,CACrBlC,MAAM,CAAC4B,GAAG,CAACM,IAAI,CAAC,CAChBF,OAAO,CAACC,GAAG,CAAClC,GAAG,CAAC,CAChBqB,SAAS,CAACb,QAAQ,CAAC,CACvB,CAAC,CACD;AACEgB,YAAY,CAAC,CAAC,CACdC,SAAS,CAAC,CAAC,CACXN,mBAAmB,CAAC,KAAK,CAAC,CAC5B;AACA,CAAC,CAAE,CAACX,QAAQ,CAAC,CAAC,CAGd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAGInD,SAAS,CAAC,IAAM,CACd4D,WAAW,CAACrB,WAAW,CAACwC,UAAU,CAACC,QAAQ,CAACrC,GAAG,CAACsC,GAAG,CAAC,CAAC,CACnD;AACA5C,WAAW,CAACM,GAAG,CAACuC,cAAc,CAAC,CACnC,CAAC,CAAE,CAAC3C,WAAW,CAACwC,UAAU,CAAEpC,GAAG,CAAC,CAAC,CAEnC,KAAM,CAAAwC,sBAAsB,CAAIC,CAAC,EAAK,CACpC,KAAM,CAAAC,IAAI,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAC9B5C,GAAG,CAACuC,cAAc,CAAGG,IAAI,CAEzBlD,gBAAgB,CAACkD,IAAI,CAAC,CACtBhD,WAAW,CAACmD,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC,CACxC,CAAC,CAED,KAAM,CAAAK,iBAAiB,CAAIN,CAAC,EAAK,CAC/B1C,MAAM,CAAC0C,CAAC,CAACE,MAAM,CAACK,KAAK,CAAC,CACxB,CAAC,CAED,KAAM,CAAAC,UAAU,CAAIR,CAAC,EAAK,CACxBtC,OAAO,CAACsC,CAAC,CAACE,MAAM,CAACK,KAAK,CAAC,CACzB,CAAC,CAED,KAAM,CAAAE,aAAa,CAAIT,CAAC,EAAK,CAC3BpC,UAAU,CAACoC,CAAC,CAACE,MAAM,CAACK,KAAK,CAAC,CAC1Bf,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC5BD,OAAO,CAACC,GAAG,CAAC9B,OAAO,CAAC,CACtB,CAAC,CAED,KAAM,CAAA+C,kBAAkB,CAAIV,CAAC,EAAK,CAChClC,eAAe,CAACkC,CAAC,CAACE,MAAM,CAACK,KAAK,CAAC,CACjC,CAAC,CAED,KAAM,CAAAI,uBAAuB,CAAGA,CAAA,GAAM,CACpC;AACAC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,SAAS,CAAG,qBAAqB,CACvE,KAAM,CAAAC,KAAK,CAAGH,QAAQ,CAACI,aAAa,CAAC,OAAO,CAAC,CAC7CD,KAAK,CAACE,IAAI,CAAG,MAAM,CACnBF,KAAK,CAACG,MAAM,CAAG,SAAS,CAAE;AAC1BH,KAAK,CAACI,QAAQ,CAAInB,CAAC,EAAK,CACtBY,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,SAAS,CAAG,mBAAmB,CACrE,KAAM,CAAAb,IAAI,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAC9B;AACA;AACA;AACA;AACApD,gBAAgB,CAACkD,IAAI,CAAC,CACtB;AACA;AACAhD,WAAW,CAACmD,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC,CACxC,CAAC,CACDc,KAAK,CAACK,KAAK,CAAC,CAAC,CACf,CAAC,CAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAEE,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B7B,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3B;AAEE;AACA;AACA;AACA;AACA,KAAM,CAAA6B,QAAQ,CAAG,CACfC,MAAM,CAAEhE,GAAG,CAACsC,GAAG,CACf2B,IAAI,CAAEnE,GAAG,CACTI,IAAI,CAAEA,IAAI,CACVgE,IAAI,CAAE9D,OAAO,CACbE,YAAY,CAAEA,YAChB,CAAC,CAED,KAAM,CAAA6D,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,IAAI,CAAErE,GAAG,CAACsC,GAAG,CAAC,CAC9B6B,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEvE,GAAG,CAAC,CAC5BqE,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEnE,IAAI,CAAC,CAC7BiE,QAAQ,CAACE,MAAM,CAAC,cAAc,CAAE/D,YAAY,CAAC,CAC7C6D,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEjE,OAAO,CAAC,CAEhC,KAAM,CAAAsB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CACF,GAAIrC,aAAa,EAAI,IAAI,CAAE,CACzB0C,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC5BD,OAAO,CAACC,GAAG,CAAC3C,aAAa,CAAC,CAC1B4E,QAAQ,CAACE,MAAM,CAAC,gBAAgB,CAAE9E,aAAa,CAAC,CAChD,KAAM,CAAAsC,GAAG,CAAG,KAAM,CAAAjE,KAAK,CAAC0G,GAAG,WAAAvC,MAAA,CAAW/B,GAAG,CAACsC,GAAG,mBAAkB6B,QAAQ,CAAE,CACvEnC,OAAO,CAAE,CACP,cAAc,CAAE,qBAAqB,CACrC,YAAY,CAAEN,KAChB,CACJ,CAAC,CAAC,CACFrD,KAAK,CAACkG,OAAO,CAAC,eAAe,CAAC,CAC9B;AACF,CAAC,IAED,CACEtC,OAAO,CAACC,GAAG,CAACiC,QAAQ,CAAC,CACrB,KAAM,CAAAzC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAjE,KAAK,CAAC4G,IAAI,WAAAzC,MAAA,CAAW/B,GAAG,CAACsC,GAAG,oBAAmByB,QAAQ,CAAE,CAAC/B,OAAO,CAAE,CAAE,YAAY,CAAEN,KAAM,CAAC,CAAC,CAAC,CAC5G;AACA;AACA;AACArD,KAAK,CAACkG,OAAO,CAAC,CAAC5F,aAAa,CAAC,CAAC,CAElC,CACA,CAAE,MAAO8F,KAAK,CAAE,CACdxC,OAAO,CAACwC,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CpG,KAAK,CAACoG,KAAK,CAAC,CAAC/F,qBAAqB,CAAC,CAAC,CACpC;AACA;AACF,CACD;AACA;AACA;AACD;AACA;AACF,CAAC,CACA,mBACKO,KAAA,CAAAE,SAAA,EAAAuF,QAAA,eACA3F,IAAA,CAACvB,MAAM,EAACmH,SAAS,CAAC,MAAM,CAAEC,eAAe,CAAE,IAAK,CAAC,CAAC,cAClD7F,IAAA,CAACT,cAAc,GAAiB,CAAC,cACjCS,IAAA,QAAK8F,SAAS,CAAEvF,OAAO,CAACwF,OAAQ,CAAAJ,QAAA,cAC9BzF,KAAA,QAAK4F,SAAS,CAAEvF,OAAO,CAACyF,YAAa,CAAAL,QAAA,eACnCzF,KAAA,QAAK4F,SAAS,CAAEvF,OAAO,CAAC0F,eAAgB,CAAAN,QAAA,eACtCzF,KAAA,QAAK4F,SAAS,CAAEvF,OAAO,CAAC2F,YAAa,CAAAP,QAAA,eACnC3F,IAAA,QACE8F,SAAS,CAAEvF,OAAO,CAAC4F,eAAgB,CACnCC,GAAG,CAAEnF,GAAG,CAACoF,YAAY,CAAG3E,EAAE,CAACT,GAAG,CAACoF,YAAY,CAAG3E,EAAE,CAAC,oBAAqB,CACtE4E,GAAG,CAAC,EAAE,CACP,CAAC,cAQFtG,IAAA,QAAKuG,EAAE,CAAC,YAAY,CAClBT,SAAS,CAAEvF,OAAO,CAACiG,cAAe,CAClCJ,GAAG,CAAEnF,GAAG,CAACuC,cAAc,CAAG9B,EAAE,CAAGT,GAAG,CAACuC,cAAc,CAAG9B,EAAE,CAAC,qBAAsB,CAC7E4E,GAAG,CAAC,EAAE,CACP,CAAC,EACC,CAAC,cACNpG,KAAA,QAAK4F,SAAS,CAAEvF,OAAO,CAACkG,WAAY,CAAAd,QAAA,EACnC1E,GAAG,CAACQ,QAAQ,GAAKZ,WAAW,CAACY,QAAS;AACrD;AACA;AACA;AACA;AACA,WALqD,cAMrCvB,KAAA,OAAI4F,SAAS,CAAEvF,OAAO,CAACmG,eAAgB,CAAAf,QAAA,EAAE1E,GAAG,CAACQ,QAAQ,CAAC,GAAC,EAAI,CAAC,EAKzD,CAAC,EACH,CAAC,cACRzB,IAAA,QAAK8F,SAAS,CAAEvF,OAAO,CAACoG,kBAAmB,CAAAhB,QAAA,cACvC3F,IAAA,CAACrB,IAAI,EAAC8C,QAAQ,CAAEA,QAAS,CAACmF,aAAa,CAAE,GAAI,CAAC,CAAC,CAE5C,CAAC,EACL,CAAC,CACD,CAAC,EACN,CAAC,CAEP,CAEF,cAAe,CAAA3H,UAAU,CAACC,MAAM,CAAC,CAACmB,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}